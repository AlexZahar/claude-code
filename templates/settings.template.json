{
  "$schema": "https://json.schemastore.org/claude-code-settings.json",
  "env": {
    "ANTHROPIC_CUSTOM_HEADERS": "anthropic-beta: interleaved-thinking-2025-05-14",
    "MAX_THINKING_TOKENS": "30000"
  },
  "permissions": {
    "allow": [
      "*"
    ],
    "deny": []
  },
  "model": "sonnet",
  "enableAllProjectMcpServers": false,
  "hooks": {
    "SessionStart": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "{{HOME}}/.claude/boardlens-dev-startup-hook-multi.sh"
          },
          {
            "type": "command",
            "command": "{{HOME}}/.claude/mcp-session-hook-multi.sh"
          }
        ]
      }
    ],
    "PreToolUse": [
      {
        "matcher": "Grep|Search|Glob",
        "hooks": [
          {
            "type": "command",
            "command": "HOOK_TYPE=wrong-tool {{HOME}}/.claude/serena-hooks.sh"
          }
        ]
      },
      {
        "matcher": "Edit|MultiEdit",
        "hooks": [
          {
            "type": "command",
            "command": "HOOK_TYPE=pre-edit {{HOME}}/.claude/gemini-hooks.sh"
          }
        ]
      },
      {
        "matcher": "Write",
        "hooks": [
          {
            "type": "command",
            "command": "HOOK_TYPE=pre-write {{HOME}}/.claude/gemini-hooks.sh"
          }
        ]
      },
      {
        "matcher": "WebSearch|WebFetch",
        "hooks": [
          {
            "type": "command",
            "command": "HOOK_TYPE=pre-websearch {{HOME}}/.claude/documentation-hooks.sh"
          }
        ]
      }
    ],
    "PostToolUse": [
      {
        "matcher": "Edit|MultiEdit|Write",
        "hooks": [
          {
            "type": "command",
            "command": "sh -c 'if echo \"$TOOL_OUTPUT\" | grep -q \"successfully\"; then HOOK_TYPE=post-edit {{HOME}}/.claude/gemini-hooks.sh; fi'"
          }
        ]
      }
    ],
    "UserPromptSubmit": [
      {
        "matcher": "/compact",
        "hooks": [
          {
            "type": "command",
            "command": "{{HOME}}/.claude/compact-memory-hook.sh"
          }
        ]
      }
    ],
    "Stop": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "echo \"ðŸ’¡ Tip: Use 'gemini -p' for analysis or '{{HOME}}/.claude/graphiti-hook.sh search' for memories!\""
          }
        ]
      }
    ]
  },
  "mcpServers": {
    "multi-mcp-proxy": {
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-fetch@0.1.3",
        "{{HOME}}/.claude/multi-mcp-sse-config.json"
      ]
    }
  },
  "slashCommands": {
    "remember": {
      "command": "{{HOME}}/.claude/slash-commands/remember.sh"
    },
    "recall": {
      "command": "{{HOME}}/.claude/slash-commands/recall.sh"
    },
    "gemini-overview": {
      "command": "{{HOME}}/.claude/slash-commands/gemini-overview.sh"
    },
    "gemini-analyze": {
      "command": "{{HOME}}/.claude/slash-commands/gemini-analyze.sh"
    },
    "gemini-security": {
      "command": "{{HOME}}/.claude/slash-commands/gemini-security.sh"
    },
    "gemini-performance": {
      "command": "{{HOME}}/.claude/slash-commands/gemini-performance.sh"
    },
    "gemini-review": {
      "command": "{{HOME}}/.claude/slash-commands/gemini-review.sh"
    },
    "context7-docs": {
      "command": "{{HOME}}/.claude/slash-commands/context7-docs.sh"
    }
  }
}